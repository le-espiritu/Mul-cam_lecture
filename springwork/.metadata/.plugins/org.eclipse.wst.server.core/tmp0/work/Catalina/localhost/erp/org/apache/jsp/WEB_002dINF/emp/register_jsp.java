/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2021-10-12 07:12:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.emp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css?family=Montserrat\" rel=\"stylesheet\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("  <script type=\"text/javascript\">\r\n");
      out.write("  	$(document).ready(function(){\r\n");
      out.write("  		$(\"#id\").on(\"keyup\",function(){\r\n");
      out.write("  			/*\r\n");
      out.write("  			 jQuery에서 Ajax로 요청하기 - get방식\r\n");
      out.write("  			 [형식]\r\n");
      out.write("  			 url => Ajax로 요청할 요청path\r\n");
      out.write("  			 data => Ajax 요청을 실행하기 위해 외부에서 입력받아야 하는 값이 있는 경우 전달\r\n");
      out.write("  			         json형식으로 만들어서 보낸다.\r\n");
      out.write("  			         json형식 : {\"name\":\"value\",\"name\":\"value\",.....}\r\n");
      out.write("  			 success => Ajax요청해서 성공적으로 데이터를 받으면 처리할 내용을 함수로 표현(익명의 함수)\r\n");
      out.write("  			            Ajax요청으로 받아온 데이터를 이용해서 뷰를 변경하는 코드\r\n");
      out.write("  			 dataType => Ajax요청 후 응답으로 전달받을 데이터의 형식(text,json....)\r\n");
      out.write("  			 $.get(url,data,success,dataType)\r\n");
      out.write("  			 \r\n");
      out.write("  			 jQuery에서 Ajax로 요청하기 - post방식\r\n");
      out.write("  			 $.get과 동일한 형식\r\n");
      out.write("  			 $.post(url,data,success,dataType)\r\n");
      out.write("  			*/\r\n");
      out.write("  			\r\n");
      out.write("  			$.get(\"/erp/emp/idcheck.do\",\r\n");
      out.write("  				  {\"id\":$(\"#id\").val()},\r\n");
      out.write("  				   function(data){ //data는 응답되어 오는 데이터를 자동으로  success란에 명시하는 함수의 매개변수로 전달\r\n");
      out.write("  					               //  -----------------------\r\n");
      out.write("  					               //       Ajax성공으로 받은 데이터\r\n");
      out.write("  					  //Ajax로 요청해서 응답받은 데이터를 <span>태그의 내부 텍스트로 출력\r\n");
      out.write("  					  $(\"#checkVal\").text(data);\r\n");
      out.write("  				  },\r\n");
      out.write("  				  \"text\");\r\n");
      out.write("  			//자바스크립트에서 동기방식으로 요청하기 - 기존에 우리가 웹을 요청해서 응답받아 사용하는 방법\r\n");
      out.write("  			//location.href=\"/erp/emp/idcheck.do?id=\"+$(\"#id\").val(); - > 원하는 작업을 표현할 수 없다.\r\n");
      out.write("  		});\r\n");
      out.write("  	});\r\n");
      out.write("  \r\n");
      out.write("  </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<br><br>\r\n");
      out.write("		<div>\r\n");
      out.write("				<form role=\"form\" class=\"form-horizontal\"\r\n");
      out.write("					action=\"/erp/emp/insert.do\" method=\"POST\" \r\n");
      out.write("					name=\"myform\">\r\n");
      out.write("					<fieldset>\r\n");
      out.write("						<div id=\"legend\">\r\n");
      out.write("							<legend>아래 양식을 작성해주세요.</legend>\r\n");
      out.write("						</div>\r\n");
      out.write("						");
      out.write("\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<!-- 부서코드 -->\r\n");
      out.write("							<label class=\"control-label col-sm-2\" for=\"orgcode\">부서코드</label>\r\n");
      out.write("							<div class=\"col-sm-3\">\r\n");
      out.write("								<input type=\"text\" id=\"orgcode\" name=\"deptno\"\r\n");
      out.write("									placeholder=\"부서코드\" class=\"form-control\"\r\n");
      out.write("									 required>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("	\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<!-- 성명-->\r\n");
      out.write("							<label class=\"control-label col-sm-2\" for=\"orgname\">성명</label>\r\n");
      out.write("							<div class=\"col-sm-3\">\r\n");
      out.write("								<input type=\"text\" id=\"orgname\" name=\"name\"\r\n");
      out.write("									placeholder=\"성명\" class=\"form-control\" minlength=\"2\" >\r\n");
      out.write("	\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<!-- 사번-->\r\n");
      out.write("							<label class=\"control-label col-sm-2\" for=\"id\">사번</label>\r\n");
      out.write("							<div class=\"col-sm-3\">\r\n");
      out.write("								<input type=\"text\" id=\"id\" name=\"id\"\r\n");
      out.write("									placeholder=\"사번\" class=\"form-control\" \r\n");
      out.write("									minlength=\"4\" required >\r\n");
      out.write("								\r\n");
      out.write("							</div>\r\n");
      out.write("							<span id=\"checkVal\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${result}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("						</div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("					\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("						\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<!-- 패스워드-->\r\n");
      out.write("							<label class=\"control-label col-sm-2\" for=\"pass\">패스워드</label>\r\n");
      out.write("							<div class=\"col-sm-3\">\r\n");
      out.write("								<input type=\"text\" id=\"pass\" name=\"pass\"\r\n");
      out.write("									placeholder=\"패스워드\" class=\"form-control\" minlength=\"4\" >\r\n");
      out.write("	\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<!-- 주소-->\r\n");
      out.write("							<label class=\"control-label col-sm-2\" for=\"addr\">주소</label>\r\n");
      out.write("							<div class=\"col-sm-3\">\r\n");
      out.write("								<input type=\"text\" id=\"addr\" name=\"addr\" \r\n");
      out.write("								placeholder=\"주소\"\r\n");
      out.write("									class=\"form-control\" minlength=\"4\" required>\r\n");
      out.write("	\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("	<!-- 				<div class=\"form-group\">\r\n");
      out.write("							포인트\r\n");
      out.write("							<label class=\"control-label col-sm-2\" for=\"point\">포인트</label>\r\n");
      out.write("							<div class=\"col-sm-3\">\r\n");
      out.write("								<input type=\"text\" id=\"point\" name=\"point\" \r\n");
      out.write("								placeholder=\"포인트\"\r\n");
      out.write("									class=\"form-control\" minlength=\"4\" required>\r\n");
      out.write("	\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						 -->\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<!-- Button -->\r\n");
      out.write("							<div class=\"col-sm-3 col-sm-offset-2\">\r\n");
      out.write("								<input type=\"submit\" value=\"가입하기\" class=\"btn btn-success\"/>\r\n");
      out.write("							</div>\r\n");
      out.write("							\r\n");
      out.write("						</div>\r\n");
      out.write("					</fieldset>\r\n");
      out.write("				</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
