<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xmlns:context="http://www.springframework.org/schema/context"
			xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context
        	http://www.springframework.org/schema/context/spring-context.xsd">
    <!--
       설정파일과 어노테이션을 이용해서 빈을 등록 작업
       설정파일 -> Spring API를 이용
       어노테이션 -> 사용자정의 빈을 등록(개발자가 만든 빈 즉, 클래스를 등록)
       
        @기호로 미리 등록되어 있는 명령어를 이용해서 컴파일러가 작업을 처리할때 인식할 수 있도록 설정
        	context:component-scan으로 작업하려고 하는 클래스가 어떤 패키지에 있는지 알려주어야 한다.
        	컴파일러가 context:component-scan으로 등록한 패키지에서 클래스를 찾아서 객체를 생성하고 DI를 처리한다.
        <context:component-scan>을 사용하시려면 	
        xmlns:context="http://www.springframework.org/schema/context",
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd"가 추가되어 있어야 한다. 이를 xml의 네임스페이스라한다.
        이 네임스페이스가 추가되어 있어야 <context:component-scan>사용할 수 있습니다.
        
        설정파일에 등록하지 않고 어노테이션기호를 활용
        1. 빈을 생성하는 경우 사용하는 어노테이션기호
           <bean>엘리먼트를 추가하고 작업하는 것과 동일
           1) Component : 기본 빈으로 등록하고 사용
           2) Service : 서비스빈의 역할을 하는 경우 등록
           3) Repository : db연동을 위한 빈(서블릿에 사용했던 DAO클래스 역할)
           4) Controller : 웹에서 사용하는 컨트롤러의 역할을 하는 빈을 등록
      -->
	<context:component-scan base-package="test.annotation"/>
	<!-- exam패키지의 모든 하위 패키지에서 클래스를 찾도록 등록  -->
	<context:component-scan base-package="exam"/>
</beans>























