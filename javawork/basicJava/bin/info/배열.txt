[[배열]]

1. 개요
   - 데이터를 저장하는 구조(자료구조)로 동일한 성격, 동일한 데이터 타입을 갖는 많은 데이터를 하나의 변수로 액세스할 수 있도록 제공되는 변수
   - 참조형으로 관리
   - 배열의 구조를 변경할 수 없다.
   - 데이터의 저장 공간을 절약하기 위한 구조가 아니라 데이터의 사용을 편하게 할 수 있도록 제공되는 자료구조
   - 배열을 사용하면 데이터가 연속된 공간에 할당
   - 자바에서 사용할 수 있는 모든 기본형과 참조형은 배열로 액세스할 수 있다.
                                        -------------------
                                           배열로 사용할 수 있다. 즉,배열변수의 타입으로 선언해서 사용할 수 있다.
   
2. 배열의 사용 방법
   1) 배열의 선언
      데이터타입[] 배열변수명;
      --------
         일반변수와 배열변수를 구분하기 위해서 
   
      ex) int데이터를 저장할 배열변수 myarr
          int[] myarr;
          
          public static void main(String[] args) {
                                ---------- ----- 
                            String배열타입    배열변수명
                            String타입의 데이터를 저장할 수 있는 배열변수  args
                                          
	      }
   
      ex) 15개의 점수를 저장하기 위한 배열을 선언
         int[] jumsuArr;
   
   
   2) 배열의 생성
      - 배열변수가 액세스할 저장 공간을 만드는 과정
      - 저장할 수 있는 공간이 만들어진다.
      - 값을 저장할 수 있는 배열의 공간은 heap에 할당된다.
      - 배열을 생성할때는 배열의 데이터타입과 몇 개의 저장 공간을 만들 것인지 명시
      - heap에 만들어지는 각 공간을 요소라한다.
      - 배열의 요소는 배열의 각 요소를 구분하기 위한 번호가 있다. 이를 index라 부른다.

      
      [구문]
      배열변수 = new 데이터타입[저장공간의 갯수]
                           -----------
                              배열의 길이
                              
      ex) 15개의 점수를 저장하기 위한 배열을 생성                         
          jumsuArr = new int[15]
      
      
      - 배열의 선언과 생성을 한 문장으로 정의
        데이터타입[] 배열변수명 = new 데이터타입[배열의사이즈]      
      ex) int형 데이터 5개를 저장할 수 있는 배열 (myarr)
          int[] myarr = new int[5]
          
          double형 데이터 3개 저장할 수 있는 배열 (my_darr)
          double[] my_darr = new double[3]
          
          String형 데이터를 5개 참조할 수 있는 배열(mystrarr)
          String[] mystrarr = new String[5]
          
          Book형 데이터를 100개 참조할 수 있는 배열(mybookArr)
          Book[] mybookArr = new Book[100]
          
   3) 배열의 초기화   
      - 배열의 각 요소에 값을 할당하는 과정
      - 초기화하지 않아도 기본값을 가지고 있다.
         byte,short,int,long -> 0
         float,double -> 0.0
         boolean -> false
         참조형(API클래스, 사용자정의클래스...) -> null
         
      - 배열의 요소에 값을 저장하기
         배열변수[index] = 저장할 값
         ex) int[] myarr = int[5]
            
             myarr가 참조하는 배열의 3번째 요소에 100을 저장
             myarr[2] = 100
             
             myarr의 4번 index에 200을 저장
             myarr[4] = 200
         
      - 배열의 요소에 저장된 값을 꺼내서 출력하기
        myarr의 3번 index에 저장된 요소의 값을 sysout으로 출력하기
        sysout(myarr[3])
        
        myarr의 0번 index에 저장된 요소의 값을 새로운 int변수 result에 저장하기
        int result = myarr[0]
                
         
3. 다차원배열
   - 배열을 참조하는 배열
   - 참조형배열과 유사   
   
   1) 다차원배열의 선언, 생성, 초기화
      - 2차원
        2차원배열변수 선언 
        int[][] myarr ;
        
        2차원배열 생성
        myarr = new int[3][2];
        
        2차원배열의 선언과 생성을 한 번에 작업
        int[][] myarr = new int[3][2];
        
        2차원배열 초기화
        myarr[0][1] = 100
        
4. 명령행매개변수
   작성한 프로그램을 java(인터프리터)명령어를 이용해서 프로그램을 실행할때 외부에서 데이터를 입력받아 처리하기 위해서 지원되는 기능
   java Application인 경우 반드시 정의해야 한다.
   public static void main(String[] args){
                           ----------------
                                     args가 명령행매개변수
                                                                   
   }
   
        
   C:\> java .class파일명 매개변수1 매개변수2 .....
   
   - .class파일명 이후에 입력한 데이터를 space로 구분해서 잘라서 매개변수로 인식
   - Application을 실행할때 외부에서 입력받아서 처리해야 하는 기능이 있는 경우 명령행 매개변수를 이용하도록 지원
   - jdk가 개발된 초창기버전에는 Scanner를 비롯한 외부에서 값을 입력받는 기능이 없었기 때문에 실행할때 입력받도록 처리
                                                    ---------------------
                                                       만약 입력 받도록 하고 싶으면 IO기능을 구현
   - 명령행매개변수로 원하는 값들을 입력하면 JVM내부에서 String배열로 만들어져서 main메소드가 호출될때 전달된다.
                                             ---------
                                               String이 자주 사용되고 
                                               기본타입과 참조형 중간에서 데이터를 변환할 수 있는 기능을 제공
   
   
   [실행예]
   c:\>java ArgsTest 192.168.9.10 5000 java
   위와 같은 명령문을 프롬프트에서 입력하면
   JVM내부에서
   args = new String[3]
   args[0] = new String("192.168.9.10")
   args[1] = new String("5000")
   args[2] = new String("java")
   
   이런 코드를 자동으로 생성하고 실행한다.
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
    