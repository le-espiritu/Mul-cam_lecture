css의 기본
  1. CSS의 사용방법
     선택자{
        속성명1:속성값1;속성명2:속성값2;......     
     }
     
     1) 문서의 <head>태그 내부에 정의하기
        - 웹 페이지의 <head>태그 내부에 <style>태그로 정의하여 사용하는 방법
          웹 페이지 하나에만 속성을 적용할 수 있다.
        - 정의하는 웹 페이지에서만 적용할 속성
     2) 외부문서로 정의하고 사용하는 방법
        - 사이트를 구성하는 모든 페이지에 공통으로 적용할 속성을 정의
        
     3) 태그 내부에 style속성을 정의해서 inline으로 사용하는 방법
        - 태그에만 적용하는 경우
        - 우선순위가 가장 높다.
        
  2. 선택자의 종류
     1) 태그
        정의된 모든 태그에 css속성을 적용
        태그명{
         속성1:속성값1;속성2:속성값2......
        }
     2) class속성
        class속성이 동일하게 정의된 컨텐츠에만  css속성을 적용
        태그와 상관없이 원하는 곳에 중복으로 사용이 가능
                           ------------------
                              동일한 class속성을 정의할 수 있다.
                              동일한 속성을 문서 내에 여러 컨텐츠에 적용할 수 있다.
                              
        [정의방법]
        <태그명 class="클래스명"></태그명>
                    ----------
                      사용자정의    
        [css적용방법]
         .클래스명{
            속성1:속성값1;속성2:속성값2......
         }                   
     3) id속성
        식별하기 위한 목적
        컨텐츠 한 개에만 정의할 수 있다.
        주로 자바스크립트나 jQuery 에서 문서의 컨텐츠를 식별하기 위해서 사용
        [정의방법]
        <태그명 id="id명"></태그명>
               ----------
                사용자정의 단, 중복되면 X    
        [css적용방법]
         #아이디명{
            속성1:속성값1;속성2:속성값2......
         }                  
     4) 여러 선택자를 복수개 선택
        태그명,태그명,...{
        
        }
     5) 태그와 id선택자(class선택자)를 활용
        동일한 태그를 이용해서 작업하는 경우 class속성이나 id속성이 정의된 태그에만 속성을 적용
        ex)id
        태그명#id명{
        
        }
        
        ex)class
        태그명.클래스명{
        
        }
     6) 태그 내부에 정의된 하위 태그
        ex) div태그 내부에 정의되어 있는 <a>태그에 속성을 적용하고 싶은 경우
        <div>
          <a>문서링크</a>
          <p>
          </p>
        </div>
        
        div a{
        
        }
          
  3. 기본속성
  4. 테이블
  5. 박스모델
  6. 포지셔닝                                                                                                                                  
  7. 플로팅
  
  
  
  
  
  
  
  1. 주제선정                                                           5. 테이블설계
     - 패키지와 유즈케이스 추출                                                - 테이블명세
     - 시스템아키텍쳐                                                        - 컬럼
     - 사용기술                                                             - 테이블들간의 관계(기본키 외래키)  
  2. 동기
     개발목적                                                           6. 화면설계
  3. 시장조사                                                              - 스토리보드 작성(툴을 이용 ppt로 작업)
     현재 사용하고 있는 웹이나 앱을 기준으로 우리 사이트와 차별점                      - A4 손으로로 그려서 
  4. 구현기능                                                           7. 필요한 데이터와 기술에 대한 학습
     ex) 쇼핑몰                                                            => open api ?
         => 테이블 연동하는 부분이 기능                                            data.go.kr이나 기관에서 가져오는 데이터?
         고객관리(고객테이블로 할 수 있는 모든 기능과 고객과 관련된 기능)                  필요한 기술에 대한 학습
            - 로그인 (카카오로그인, 리캡챠 - 카카오api, 구글api확인)                    ex) 지도 -> 지도 사용방법 학습
            - 로그아웃                                                         => 우리 사이트에서 활용될 뷰를 만들면서 학습
            - 회원가입 (주소검색 - 우편번호 api)                            8. 각 화면을 미리 만들기
            - 회원상세정보조회                                               => db나 서버에서 데이터 가져오는 방법을 배우기 전에는 db에서 조회한 데이터라   
            - 회원정보수정                                                     가정하고 직접 html로 생성
            - 회원삭제
            - 회원목록보기
            - 회원검색
            - 각 상태별로 고객조회(VIP고객정보조회, 블랙리스트고객조회)
            - 고객에게 DM발송하기 (email api확인)
         
         상품관리(상품테이블로 할 수 있는 모든 기능과 상품과 관련된 기능을 정리)
            - 상품조회
            - 카테고리조회
            - 검색
            - 상품등록
            - 상품정보수정                        상품테이블(기본키)과 상품리뷰(외래키) 테이블
            - 상품상세조회
            - 상품삭제
            
         상품리뷰관리
            .........
            ......... 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  