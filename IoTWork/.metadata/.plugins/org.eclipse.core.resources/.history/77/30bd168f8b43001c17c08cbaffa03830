package http;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.charset.Charset;
//URLConnection은 웹을 통해 데이터를 주고 받는데 사용된다.
//- URLConnection은 웹을 통해 데이터를 주고 받는데 사용된다. (RFC 2616을 따름)
//- 데이터의 타입이나 길이는 거의 제한이 없다.
//- 주로 미리 길이를 알지 못하는 스트리밍 데이터를 주고 받는데 사용된다.
//- http URL을 처리할 때 도움이 되는 몇 가지 추가적인 메서드를 가지고 있다.
//- 요청 방식을 확인 or 설정, redirect 여부 결정, 응답 코드와 메시지를 Read , 프록시 서버가 사용되었는지 여부 확인 메서드 등을 가지고 있다.
//- 다양한 HTTP 응답 코드에 해당하는 상수 값들이 정의되어있다.
public class HttpConnectionTest {
	//public static final String USER_AGENT = "Mozilla/5.0";
	

	public static void main(String[] args) throws IOException {
		//String url = "http://192.168.0.221:8088/bigdataERP/board/list.do?category=all";
		String url = "http://192.168.0.221:8088/bigdataERP/emp/idcheck.do";
		String urlParameters = "?id=jang";
        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();
        //전송방식
        con.setRequestMethod("GET");
        //add reuqest header
        con.setRequestMethod("POST");
       // con.setRequestProperty("User-Agent", USER_AGENT);
        con.setRequestProperty("Accept-Language", "en-US,en;q=0.5");
        con.setConnectTimeout(10000);       //컨텍션타임아웃 10초
      //  con.setReadTimeout(5000);           //컨텐츠조회 타임아웃 5총
        // Send post request
        con.setDoOutput(true);              //항상 갱신된내용을 가져옴.
        DataOutputStream wr = new DataOutputStream(con.getOutputStream());
        wr.writeBytes(urlParameters);
        wr.flush();
        wr.close();

        int responseCode = con.getResponseCode();
        System.out.println("\nSending 'POST' request to URL : " + url);
        System.out.println("Post parameters : " + urlParameters);
        System.out.println("Response Code : " + responseCode);

        Charset charset = Charset.forName("UTF-8");
        BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream(),charset));
        String inputLine;
        StringBuffer response = new StringBuffer();

        while ((inputLine = in.readLine()) != null) {
            response.append(inputLine);
        }
        in.close();
        System.out.println(response.toString());



	}
}
