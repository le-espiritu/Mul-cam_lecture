package http;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.ProtocolException;
import java.net.URL;
import java.nio.charset.Charset;
//URLConnection은 웹을 통해 데이터를 주고 받는데 사용된다.
//- URLConnection은 웹을 통해 데이터를 주고 받는데 사용된다. (RFC 2616을 따름)
//- 데이터의 타입이나 길이는 거의 제한이 없다.
//- 주로 미리 길이를 알지 못하는 스트리밍 데이터를 주고 받는데 사용된다.
//- http URL을 처리할 때 도움이 되는 몇 가지 추가적인 메서드를 가지고 있다.
//- 요청 방식을 확인 or 설정, redirect 여부 결정, 응답 코드와 메시지를 Read , 프록시 서버가 사용되었는지 여부 확인 메서드 등을 가지고 있다.
//- 다양한 HTTP 응답 코드에 해당하는 상수 값들이 정의되어있다.
//2. GET
//- 웹 서버로부터 리소스를 가져온다.
//3. POST
//- 폼에 입력된 내용을 서버로 전송한다.
public class HttpConnectionTest {
	//public static final String USER_AGENT = "Mozilla/5.0";
	

	public static void main(String[] args) throws IOException {
		//String url = "http://192.168.0.221:8088/bigdataERP/board/list.do?category=all";
		String url = "http://192.168.0.221:8088/bigdataERP/emp/idcheck.do?id=jang1";
        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();
        //전송방식
        con.setRequestMethod("GET");
        //Request Header 정의
  //     con.setRequestProperty("User-Agent", USER_AGENT);
        con.setConnectTimeout(10000);       //컨텍션타임아웃 10초
        con.setReadTimeout(5000);           //컨텐츠조회 타임아웃 5총

        int responseCode = con.getResponseCode();
        System.out.println("\nSending 'GET' request to URL : " + url);
        System.out.println("Response Code : " + responseCode);

        Charset charset = Charset.forName("UTF-8");
        BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream(),charset));
        String inputLine;
        StringBuffer response = new StringBuffer();
        while ((inputLine = in.readLine()) != null) {
            response.append(inputLine+"\n");
        }
        in.close();

        System.out.println("조회결과 : " + response.toString());


	}
}
